Trie node class defines a Trie algorithm,
with methods to insert words, and a recursive function to return word related to a suffix.

Trie.init
This method initialized a Trie data structure has a Time complexity of O(1) and a space complexity of O(1)

Trie.insert
Time complexity: O(n)
Space complexity: 0(1)

Trie.find()
Time complexity: O(n)
Space complexity: O(1)

TrieNode.init
This method initialized a TrieNode data structure has a Time complexity of O(1) and a space complexity of O(1)

TrieNode.insert()
Time complexity: O(n)
Space complexity: 0(1)

TrieNode.suffixes()
Time complexity: O(n*m) or O(n**2). Since it is a recursive function
Space complexity: O(1)

Overall(Modular Complexity), the space complexity is 0(1) and time complexity is O(n*m) or O(n**2)
